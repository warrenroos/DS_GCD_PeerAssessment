)
data.test.body_acc_z <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\body_acc_z_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.body_gyro_x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\body_gyro_x_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.body_gyro_y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\body_gyro_y_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.body_gyro_z <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\body_gyro_z_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.total_acc_x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\total_acc_x_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.total_acc_y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\total_acc_y_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.total_acc_z <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\total_acc_z_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.subject <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\subject_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\X_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\y_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.body_acc_x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\body_acc_x_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.body_acc_y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\body_acc_y_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.body_acc_z <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\body_acc_z_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.body_gyro_x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\body_gyro_x_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.body_gyro_y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\body_gyro_y_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.body_gyro_z <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\body_gyro_z_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.total_acc_x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\total_acc_x_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.total_acc_y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\total_acc_y_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.total_acc_z <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\total_acc_z_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
# determine dimensions of the raw datasets
# related to attributes / lookups for the observations
dim(data.train.subject)
dim(data.test.subject)
dim(data.train.y)
dim(data.test.y)
dim(data.main.features)
# determine unique values of the raw datasets
# related to attributes / lookups for the observations
unique(data.train.subject)
unique(data.test.subject)
unique(data.train.y)
unique(data.test.y)
unique(data.main.features)
# determine dimensions for the unique values of the raw datasets
# related to attributes / lookups for the observations
dim(unique(data.test.subject))
dim(unique(data.train.subject))
dim(unique(data.train.y))
dim(unique(data.test.y))
dim(unique(data.main.features))
# add a blank column to the features dataset prior to using it to match against datacolumns
data.main.features <- rbind(c(V1 = 0, V2 = "blankColumn"), data.main.features)
# split columns in relevant datasets
library(stringr)
library(dplyr)
library(tidyr)
library(reshape2)
# split columns for activities
data.main.activity$prep <- gsub(" ", ",", gsub("  ", " ", data.main.activity$V1))
data.main.activity <- data.main.activity %>%
separate(prep, c("activityId", "activityName"), sep = ",")
# split columns for X data - 561 vector of time and frequency domain variables
data.test.x$prep <- gsub(" ", ",", gsub("  ", " ", data.test.x$V1))
data.test.x <- data.test.x %>%
separate(prep, data.main.features$V2, sep = ",", convert = TRUE)
data.train.x$prep <- gsub(" ", ",", gsub("  ", " ", data.train.x$V1))
data.train.x <- data.train.x %>%
separate(prep, data.main.features$V2, sep = ",", convert = TRUE)
# split columns - 128 observations - Training Dataset
data.train.body_acc_x$prep <- gsub(" ", ",", gsub("  ", " ", data.train.body_acc_x$V1))
data.train.body_acc_x <- data.train.body_acc_x %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.body_acc_y$prep <- gsub(" ", ",", gsub("  ", " ", data.train.body_acc_y$V1))
data.train.body_acc_y <- data.train.body_acc_y %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.body_acc_z$prep <- gsub(" ", ",", gsub("  ", " ", data.train.body_acc_z$V1))
data.train.body_acc_z <- data.train.body_acc_z %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.body_gyro_x$prep <- gsub(" ", ",", gsub("  ", " ", data.train.body_gyro_x$V1))
data.train.body_gyro_x <- data.train.body_gyro_x %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.body_gyro_y$prep <- gsub(" ", ",", gsub("  ", " ", data.train.body_gyro_y$V1))
data.train.body_gyro_y <- data.train.body_gyro_y %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.body_gyro_z$prep <- gsub(" ", ",", gsub("  ", " ", data.train.body_gyro_z$V1))
data.train.body_gyro_z <- data.train.body_gyro_z %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.total_acc_x$prep <- gsub(" ", ",", gsub("  ", " ", data.train.total_acc_x$V1))
data.train.total_acc_x <- data.train.total_acc_x %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.total_acc_y$prep <- gsub(" ", ",", gsub("  ", " ", data.train.total_acc_y$V1))
data.train.total_acc_y <- data.train.total_acc_y %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.total_acc_z$prep <- gsub(" ", ",", gsub("  ", " ", data.train.total_acc_z$V1))
data.train.total_acc_z <- data.train.total_acc_z %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
# split columns - 128 observations - Testing Dataset
data.test.body_acc_x$prep <- gsub(" ", ",", gsub("  ", " ", data.test.body_acc_x$V1))
data.test.body_acc_x <- data.test.body_acc_x %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.body_acc_y$prep <- gsub(" ", ",", gsub("  ", " ", data.test.body_acc_y$V1))
data.test.body_acc_y <- data.test.body_acc_y %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.body_acc_z$prep <- gsub(" ", ",", gsub("  ", " ", data.test.body_acc_z$V1))
data.test.body_acc_z <- data.test.body_acc_z %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.body_gyro_x$prep <- gsub(" ", ",", gsub("  ", " ", data.test.body_gyro_x$V1))
data.test.body_gyro_x <- data.test.body_gyro_x %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.body_gyro_y$prep <- gsub(" ", ",", gsub("  ", " ", data.test.body_gyro_y$V1))
data.test.body_gyro_y <- data.test.body_gyro_y %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.body_gyro_z$prep <- gsub(" ", ",", gsub("  ", " ", data.test.body_gyro_z$V1))
data.test.body_gyro_z <- data.test.body_gyro_z %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.total_acc_x$prep <- gsub(" ", ",", gsub("  ", " ", data.test.total_acc_x$V1))
data.test.total_acc_x <- data.test.total_acc_x %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.total_acc_y$prep <- gsub(" ", ",", gsub("  ", " ", data.test.total_acc_y$V1))
data.test.total_acc_y <- data.test.total_acc_y %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.total_acc_z$prep <- gsub(" ", ",", gsub("  ", " ", data.test.total_acc_z$V1))
data.test.total_acc_z <- data.test.total_acc_z %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
View(data.test.subject)
#data.main.activity.a <- transform(data.main.activity, colsplit(prep, ",", c('a', 'b')))
#data.main.activity.a <- transform(data.main.activity, "Yes")
#select(everything()) %>%
#filter(PROPDMGEXP %in% c("B"))
# add appropriate colnames to the datasets
colnames(data.train.y) = c("activity")
colnames(data.test.y) = c("activity")
colnames(data.train.subject) = c("person")
colnames(data.test.subject) = c("person")
View(data.test.x)
View(data.test.y)
View(data.test.y)
View(data.test.subject)
View(data.test.subject)
# add appropriate colnames to the datasets
colnames(data.train.y) = c("activityID")
colnames(data.test.y) = c("activityID")
colnames(data.train.subject) = c("personID")
colnames(data.test.subject) = c("personID")
View(data.test.y)
View(data.main.activity)
View(data.main.activity)
View(data.main.features)
View(data.main.features)
View(data.test.subject)
View(data.test.subject)
View(data.main.features)
View(data.main.activity)
colnames(data.test.x)
View(data.test.x)
colnames(data.test.x)[2] <- c("blankColumn")
# create lookup table for PersonID / PersonName
data.main.subject <- cbind(PersonID = c(1:30), PersonName = c("Person"))
View(data.main.subject)
# create lookup table for PersonID / PersonName
data.main.subject <- cbind(PersonID = 1:30, PersonName = c(paste("Person", 1:30)))
View(data.main.subject)
View(data.main.subject)
View(data.main.subject)
data.main.subject <- cbind(PersonID = 1:30, PersonName = c(paste("Person", 1:30)))
# create lookup table for PersonID / PersonName
data.main.subject <- cbind(PersonID = as.numeric(1:30), PersonName = c(paste("Person", 1:30)))
# create lookup table for PersonID / PersonName
data.main.subject <- as.data.frame(cbind(PersonID = 1:30, PersonName = c(paste("Person", 1:30))))
# create lookup table for PersonID / PersonName
data.main.subject <- as.data.frame(PersonName = c(paste("Person", 1:30)))
data.main.subject <- cbind(PersonID = as.numeric(1:30), data.main.subject)
data.main.subject <- as.data.frame(PersonName = as.character(c(paste("Person", 1:30))))
data.main.subject <- cbind(PersonID = as.numeric(1:30), data.main.subject)
data.main.subject <- cbind(PersonName = as.character(c(paste("Person", 1:30))))
# create lookup table for PersonID / PersonName
data.main.subject <- cbind(PersonName = as.character(c(paste("Person", 1:30))))
data.main.subject <- as.data.frame(data.main.subject)
data.main.subject <- cbind(PersonID = as.numeric(1:30), data.main.subject)
# create lookup table for PersonID / PersonName
data.main.subject <- cbind(PersonName = as.character(c(paste("Person", 1:30))))
data.main.subject <- as.data.frame(data.main.subject)
data.main.subject <- cbind(PersonID = as.integer(1:30), data.main.subject)
# create lookup table for PersonID / PersonName
data.main.subject <- cbind(PersonName = as.character(c(paste("Person", 1:30))))
data.main.subject <- as.data.frame(data.main.subject)
data.main.subject <- cbind(PersonID = as.integer(1:30), data.main.subject)
data.main.subject$PersonName <- as.character(data.main.subject$PersonName)
# create lookup table for PersonID / PersonName
data.main.subject <- cbind(PersonName = as.character(c(paste("Person", 1:30))))
#data.main.subject <- as.data.frame(data.main.subject)
data.main.subject <- cbind(PersonID = as.integer(1:30), data.main.subject)
data.main.subject$PersonName <- as.character(data.main.subject$PersonName)
# create lookup table for PersonID / PersonName
data.main.subject <- cbind(PersonName = as.character(c(paste("Person", 1:30))))
data.main.subject <- as.data.frame(data.main.subject)
data.main.subject <- cbind(PersonID = as.integer(1:30), data.main.subject)
data.main.subject$PersonName <- as.character(data.main.subject$PersonName)
View(data.main.subject)
# create lookup table for PersonID / PersonName
data.main.subject <- cbind(PersonName = c(paste("Person", 1:30)))
data.main.subject <- as.data.frame(data.main.subject)
data.main.subject <- cbind(PersonID = as.integer(1:30), data.main.subject)
data.main.subject$PersonName <- as.character(data.main.subject$PersonName)
data.main.subject <- cbind(PersonID = 1:30, PersonName = c(paste("Person", 1:30)))
data.main.subject <- as.data.frame(data.main.subject)
#data.main.subject <- cbind(PersonID = as.integer(1:30), data.main.subject)
data.main.subject$PersonName <- as.character(data.main.subject$PersonName)
data.main.subject$PersonID <- as.integer(data.main.subject$PersonID)
View(data.main.subject)
View(data.main.subject)
# create lookup table for PersonID / PersonName
data.main.subject <- cbind(PersonName = c(paste("Person", 1:30)))
data.main.subject <- as.data.frame(data.main.subject)
data.main.subject <- cbind(PersonID = as.integer(1:30), data.main.subject)
data.main.subject$PersonName <- as.character(data.main.subject$PersonName)
View(data.main.subject)
source('~/GitHub/DS_GCD_PeerAssessment/DS_GCD_PeerAssessment/run_analysis.R')
source('~/GitHub/DS_GCD_PeerAssessment/DS_GCD_PeerAssessment/run_analysis.R')
source('~/GitHub/DS_GCD_PeerAssessment/DS_GCD_PeerAssessment/run_analysis.R')
rm(list = ls())
# read in data from files
data.main.activity <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\activity_labels.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.main.features <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\features.txt",
header = FALSE, sep = " ", na.strings = "NA", nrows = 250000
)
data.test.subject <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\subject_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\X_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\y_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.body_acc_x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\body_acc_x_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.body_acc_y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\body_acc_y_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.body_acc_z <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\body_acc_z_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.body_gyro_x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\body_gyro_x_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.body_gyro_y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\body_gyro_y_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.body_gyro_z <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\body_gyro_z_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.total_acc_x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\total_acc_x_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.total_acc_y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\total_acc_y_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.test.total_acc_z <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\test\\inertialSignals\\total_acc_z_test.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.subject <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\subject_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\X_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\y_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.body_acc_x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\body_acc_x_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.body_acc_y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\body_acc_y_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.body_acc_z <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\body_acc_z_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.body_gyro_x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\body_gyro_x_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.body_gyro_y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\body_gyro_y_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.body_gyro_z <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\body_gyro_z_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.total_acc_x <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\total_acc_x_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.total_acc_y <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\total_acc_y_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
data.train.total_acc_z <- read.table(
file = "..\\..\\Data\\UCI_HAR_Dataset\\train\\inertialSignals\\total_acc_z_train.txt",
header = FALSE, sep = ",", na.strings = "NA", nrows = 250000
)
# determine dimensions of the raw datasets
# related to attributes / lookups for the observations
dim(data.train.subject)
dim(data.test.subject)
dim(data.train.y)
dim(data.test.y)
dim(data.main.features)
# determine unique values of the raw datasets
# related to attributes / lookups for the observations
unique(data.train.subject)
unique(data.test.subject)
unique(data.train.y)
unique(data.test.y)
unique(data.main.features)
# determine dimensions for the unique values of the raw datasets
# related to attributes / lookups for the observations
dim(unique(data.test.subject))
dim(unique(data.train.subject))
dim(unique(data.train.y))
dim(unique(data.test.y))
dim(unique(data.main.features))
# add a blank column to the features dataset prior to using it to match against datacolumns
data.main.features <- rbind(c(V1 = 0, V2 = "blankColumn"), data.main.features)
# split columns in relevant datasets
library(stringr)
library(dplyr)
library(tidyr)
library(reshape2)
# split columns for activities
data.main.activity$prep <- gsub(" ", ",", gsub("  ", " ", data.main.activity$V1))
data.main.activity <- data.main.activity %>%
separate(prep, c("activityId", "activityName"), sep = ",")
# split columns for X data - 561 vector of time and frequency domain variables
data.test.x$prep <- gsub(" ", ",", gsub("  ", " ", data.test.x$V1))
data.test.x <- data.test.x %>%
separate(prep, data.main.features$V2, sep = ",", convert = TRUE)
data.train.x$prep <- gsub(" ", ",", gsub("  ", " ", data.train.x$V1))
data.train.x <- data.train.x %>%
separate(prep, data.main.features$V2, sep = ",", convert = TRUE)
# split columns - 128 observations - Training Dataset
data.train.body_acc_x$prep <- gsub(" ", ",", gsub("  ", " ", data.train.body_acc_x$V1))
data.train.body_acc_x <- data.train.body_acc_x %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.body_acc_y$prep <- gsub(" ", ",", gsub("  ", " ", data.train.body_acc_y$V1))
data.train.body_acc_y <- data.train.body_acc_y %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.body_acc_z$prep <- gsub(" ", ",", gsub("  ", " ", data.train.body_acc_z$V1))
data.train.body_acc_z <- data.train.body_acc_z %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.body_gyro_x$prep <- gsub(" ", ",", gsub("  ", " ", data.train.body_gyro_x$V1))
data.train.body_gyro_x <- data.train.body_gyro_x %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.body_gyro_y$prep <- gsub(" ", ",", gsub("  ", " ", data.train.body_gyro_y$V1))
data.train.body_gyro_y <- data.train.body_gyro_y %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.body_gyro_z$prep <- gsub(" ", ",", gsub("  ", " ", data.train.body_gyro_z$V1))
data.train.body_gyro_z <- data.train.body_gyro_z %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.total_acc_x$prep <- gsub(" ", ",", gsub("  ", " ", data.train.total_acc_x$V1))
data.train.total_acc_x <- data.train.total_acc_x %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.total_acc_y$prep <- gsub(" ", ",", gsub("  ", " ", data.train.total_acc_y$V1))
data.train.total_acc_y <- data.train.total_acc_y %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.train.total_acc_z$prep <- gsub(" ", ",", gsub("  ", " ", data.train.total_acc_z$V1))
data.train.total_acc_z <- data.train.total_acc_z %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
# split columns - 128 observations - Testing Dataset
data.test.body_acc_x$prep <- gsub(" ", ",", gsub("  ", " ", data.test.body_acc_x$V1))
data.test.body_acc_x <- data.test.body_acc_x %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.body_acc_y$prep <- gsub(" ", ",", gsub("  ", " ", data.test.body_acc_y$V1))
data.test.body_acc_y <- data.test.body_acc_y %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.body_acc_z$prep <- gsub(" ", ",", gsub("  ", " ", data.test.body_acc_z$V1))
data.test.body_acc_z <- data.test.body_acc_z %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.body_gyro_x$prep <- gsub(" ", ",", gsub("  ", " ", data.test.body_gyro_x$V1))
data.test.body_gyro_x <- data.test.body_gyro_x %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.body_gyro_y$prep <- gsub(" ", ",", gsub("  ", " ", data.test.body_gyro_y$V1))
data.test.body_gyro_y <- data.test.body_gyro_y %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.body_gyro_z$prep <- gsub(" ", ",", gsub("  ", " ", data.test.body_gyro_z$V1))
data.test.body_gyro_z <- data.test.body_gyro_z %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.total_acc_x$prep <- gsub(" ", ",", gsub("  ", " ", data.test.total_acc_x$V1))
data.test.total_acc_x <- data.test.total_acc_x %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.total_acc_y$prep <- gsub(" ", ",", gsub("  ", " ", data.test.total_acc_y$V1))
data.test.total_acc_y <- data.test.total_acc_y %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
data.test.total_acc_z$prep <- gsub(" ", ",", gsub("  ", " ", data.test.total_acc_z$V1))
data.test.total_acc_z <- data.test.total_acc_z %>%
separate(prep, 0:128, sep = ",", convert = TRUE)
#data.main.activity.a <- transform(data.main.activity, colsplit(prep, ",", c('a', 'b')))
#data.main.activity.a <- transform(data.main.activity, "Yes")
#select(everything()) %>%
#filter(PROPDMGEXP %in% c("B"))
# add appropriate colnames to the datasets
colnames(data.train.y) = c("activityID")
colnames(data.test.y) = c("activityID")
colnames(data.train.subject) = c("personID")
colnames(data.test.subject) = c("personID")
colnames(data.test.x)[2] <- c("blankColumn")
# create lookup table for PersonID / PersonName
data.main.subject <- cbind(PersonName = c(paste("Person", 1:30)))
data.main.subject <- as.data.frame(data.main.subject)
data.main.subject <- cbind(PersonID = as.integer(1:30), data.main.subject)
data.main.subject$PersonName <- as.character(data.main.subject$PersonName)
# cleanup some datatypes
data.main.activity$activityId <- as.integer(data.main.activity$activityId)
data.main.features$V1 <- as.integer(data.main.features$V1)
colnames(data.test.activity) = c("activityID", "activityName")
colnames(data.main.features) = c("featureID", "featureName")
data.test.temp <- cbind(data.test.subject, data.test.y, data.test.x)
data.train.temp <- cbind(data.train.subject, data.train.y, data.train.x)
data.test.temp$TestOrTrain <- c("test")
data.train.temp$TestOrTrain <- c("train")
View(data.test.temp)
colnames(data.train.x)[2] <- c("TestOrTrain")
colnames(data.test.x)[2] <- c("TestOrTrain")
data.train.x$TestOrTrain <- as.character(data.train.x$TestOrTrain)
data.test.x$TestOrTrain <- as.character(data.test.x$TestOrTrain)
data.test.temp$TestOrTrain <- c("test")
data.train.temp$TestOrTrain <- c("train")
data.test.x$TestOrTrain <- c("test")
data.train.x$TestOrTrain <- c("train")
data.test.temp <- cbind(data.test.subject, data.test.y, data.test.x)
data.train.temp <- cbind(data.train.subject, data.train.y, data.train.x)
data.combo.temp <- rbind(data.train.temp, data.test.temp)
data.combo.temp <- cbind(measurementType = as.character(c("")), data.combo.temp)
data.combo.temp <- cbind(Direction = as.character(c("")), data.combo.temp)
data.combo.temp$MeasurementType <- as.character(data.combo.temp$measurementType)
data.combo.temp$Direction <- as.character(data.combo.temp$Direction)
data.combo.temp$MeasurementType <- as.character(data.combo.temp$measurementType)
data.combo.temp$Direction <- as.character(data.combo.temp$Direction)
save.image("C:/Users/Warren/SkyDrive/Documents/Warren/Training/Data Science Certification - John Hopkins - 20150914/Getting and Cleaning Data 20151025/GCD Project 20151116/DS_GCD_Project1_RData.RData")
